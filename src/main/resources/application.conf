akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  enable-additional-serialization-bindings = on
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  actor {
    provider = remote
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "modules.crawler.model.CrawlingRequest" = kryo
      "modules.crawler.model.GetResult" = kryo
      "modules.crawler.model.UpdateUrl" = kryo
      "java.util.ArrayList" = kryo
      "modules.crawler.service.CrawlerServiceImpl" = kryo
      "java.util.UUID" = kryo
      "akka.remote.RemoteScope" = java
    }
    kryo {
      type = "graph"
      idstrategy = "incremental"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "lz4,aes"
      implicit-registration-logging = false
      kryo-trace = false
      resolve-subclasses = false
      classes = [
        "modules.crawler.model.GetResult",
        "modules.crawler.model.CrawlingRequest",
        "modules.crawler.model.UpdateUrl",
        "modules.crawler.service.CrawlerServiceImpl"
      ]
    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = ${?REMOTE_HOSTNAME}
      hostname = "localhost"
      port = ${?REMOTE_PORT}
      port = 2552
    }
  }
}

grizzly {
  host: "0.0.0.0"
  port: 8081
  api_suffix: "api"
}

rest {
  gios {
    port: 80
    host: "api.gios.gov.pl/pjp-api/rest"
  }
}

crawler {
  browser_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36"
  deployment: {
    protocol: "akka.tcp"
    system: "crawler"
    # pass belows deployment as arguments -Darg=value
    ports: [2552]
    hosts: ["localhost"]
  }
}

